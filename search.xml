<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>n后问题-分支限界法</title>
      <link href="2022/11/16/n%E5%90%8E%E9%97%AE%E9%A2%98-%E5%88%86%E6%94%AF%E9%99%90%E7%95%8C%E6%B3%95/"/>
      <url>2022/11/16/n%E5%90%8E%E9%97%AE%E9%A2%98-%E5%88%86%E6%94%AF%E9%99%90%E7%95%8C%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="前提说明"><a href="#前提说明" class="headerlink" title="前提说明"></a>前提说明</h3><ul><li>最近算法课有道作业题要求用分支限界法求解n皇后问题，想网上搜题解，苦于大多是挂羊头卖狗肉的，遂想了这个方法，并记录下来。</li><li>该方法与回溯解法有相似之处。</li></ul><h3 id="思路说明"><a href="#思路说明" class="headerlink" title="思路说明"></a>思路说明</h3><ul><li>分支限界法采用广度优先搜索解空间树，通常会用到一个辅助队列(<em>有优先级</em>)；本题解中辅助队列存放元组(行, 列)，按照行大优先，相同行，列小优先，列小优先不需要重新设置，因为入队时按此顺序入队，初始时先将首行元素全部入队(因为首行位置均可放置)，只要队列非空就选取队首元素作为扩展结点出队，若出队元素行到最末则表示找到解了，函数返回，否则将与之相连的有效(可放置)子结点入队，直到队列为空，表示问题无解。</li></ul><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><pre><code><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sort</span>(<span class="params">a</span>):</span></span><br><span class="line">    b = <span class="built_in">sorted</span>(a, key = <span class="keyword">lambda</span> t : t[<span class="number">0</span>], reverse = <span class="literal">True</span>)</span><br><span class="line">    a[:] = b[:]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">place</span>(<span class="params">k, x</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(k):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">abs</span>(i - k) == <span class="built_in">abs</span>(x[i] - x[k]) <span class="keyword">or</span> x[i] == x[k]: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nQueen</span>(<span class="params">n, x</span>):</span></span><br><span class="line">    queue = []</span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        queue.append((<span class="number">0</span>, col))</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(queue) &gt; <span class="number">0</span>:</span><br><span class="line">        firstElem = queue.pop(<span class="number">0</span>)</span><br><span class="line">        x[firstElem[<span class="number">0</span>]] = firstElem[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> (firstElem[<span class="number">0</span>] == n - <span class="number">1</span>):</span><br><span class="line">            <span class="built_in">print</span>(x)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="comment"># 将其有效子结点入队</span></span><br><span class="line">        <span class="keyword">for</span> col <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            x[firstElem[<span class="number">0</span>] + <span class="number">1</span>] = col</span><br><span class="line">            <span class="keyword">if</span> place(firstElem[<span class="number">0</span>] + <span class="number">1</span>, x):</span><br><span class="line">                queue.append((firstElem[<span class="number">0</span>] + <span class="number">1</span>, col))</span><br><span class="line">        sort(queue)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre><h3 id="进一步优化"><a href="#进一步优化" class="headerlink" title="进一步优化"></a>进一步优化</h3><ul><li>上述代码为图方便，在实现优先队列时每次均采用排序达到效果，一种较之更好的方式是可以直接使用python库queue中的PriorityQueue，时间复杂度会有提升。</li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul><li>在选择扩展结点的时候，每次都是尽可能的选择结点的左孩子(如果存在)，可见与回溯法搜索流程十分相似。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分支限界法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动画分享</title>
      <link href="2022/04/05/%E5%8A%A8%E7%94%BB%E5%88%86%E4%BA%AB/"/>
      <url>2022/04/05/%E5%8A%A8%E7%94%BB%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<p>分享一首歌曲，或许你也会觉得好听呢</p><div class="video-container"><iframe src=https://mov.bn.netease.com/open-movie/nos/mp4/2019/03/27/SEAC2UQOL_shd.mp4 frameborder=0 allow=encrypted-media allowfullscreen ></iframe></div>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 音乐 </tag>
            
            <tag> 动画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo使用aplayer的坑</title>
      <link href="2021/09/19/hexo%E4%BD%BF%E7%94%A8aplayer%E7%9A%84%E5%9D%91/"/>
      <url>2021/09/19/hexo%E4%BD%BF%E7%94%A8aplayer%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><ul><li>由于想加入一些自定义的js和css文件，根据建议，自定义的文件最好不要放在相应主题的目录下，于是将其放在hexo下新建的source目录中。</li></ul><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ul><li>自定义的文件用配置的方式注入后，发现js和css内容开头都被加入了一段有关aplayer的标签。</li></ul><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><ul><li>其实并非一定要使用hexo-tag-aplayer标签，在尝试了官方文档给出对于重复加载资源文件的解决方法不生效后，于是<strong>直接将此插件卸载</strong>，重新运行后发现自定义的js和css内容开头都没有关于aplayer的标签了。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> aplayer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主题更换</title>
      <link href="2021/04/29/themeChange/"/>
      <url>2021/04/29/themeChange/</url>
      
        <content type="html"><![CDATA[<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>好久没有更新文章内容了，最近看到其他其他博客中的一个全局音乐播放器(站内的页面切换不中断播放)体验很不错，于是在上一个主题的基础上开始倒腾全局的音乐播放器。</p><h2 id="障碍"><a href="#障碍" class="headerlink" title="障碍"></a>障碍</h2><p>自己瞎试了很多方法都不行，然后网上一搜了解到一个叫pjax的东西，于是参考教程使用，但是发现在icarus主题下要改动挺多的，例如</p><ul><li>页面布局(套一个div区分开音乐播放器，只刷新div内的)</li><li>由于pjax不会每次都加载js，所以还要自己写一个js用来重新加载原页面中的js</li></ul><p>最后实现和存在问题</p><ul><li>评论系统valine有时不好使了(看其他博客中有写到说在valine配置中显式增加path: window.location.pathname)</li><li>由于js要重新加载，导致页面切换的动画不好看(已切换页面动画后加载)</li></ul><p>总之改着心里也没底。</p><h2 id="眼前一亮"><a href="#眼前一亮" class="headerlink" title="眼前一亮"></a>眼前一亮</h2><p>在翻阅各种博客后，终于看到了现在应用的主题–butterfly；到github上一搜特点，支持pjax(通过配置文件开关该插件)，valine，justified-gallery，当然还有aplayer，于是开始着手更换。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>butterfly主题官方文档写的很详细，几乎所有我想要的功能都可以通过配置文件实现，不需要改动主题源码，嗯，感觉就很不错。站内音乐不中断的感觉真好。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 主题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Make a Decision</title>
      <link href="2020/04/23/MakeADecision/"/>
      <url>2020/04/23/MakeADecision/</url>
      
        <content type="html"><![CDATA[<h2 id="What"><a href="#What" class="headerlink" title="What"></a>What</h2><p>I am not sure.</p><h2 id="when"><a href="#when" class="headerlink" title="when"></a>when</h2><p>Maybe three or four days ago.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>6步!使用Hexo搭建自己的主页</title>
      <link href="2020/04/17/Hexo/"/>
      <url>2020/04/17/Hexo/</url>
      
        <content type="html"><![CDATA[<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li>安装nodejs</li><li>运行命令 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li>初始化helloworld工程 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init helloworld</span><br></pre></td></tr></table></figure><span id="more"></span></li><li>进入工程目录安装依赖 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd helloworld</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li>启动服务 <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></li><li>浏览器访问localhost:4000</li></ol>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
